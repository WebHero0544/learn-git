（1）怎么将本地git仓库提交到远端github仓库：

mkdir learn-git

cd learn-git

git init

在github上新建一个名为learn-git的仓库，并粘贴地址：https://github.com/WebHero0544/learn-git.git

git remote add origin https://github.com/WebHero0544/learn-git.git

git push -u origin master   ------该处如果报错，说明远端github仓库已经有文件了（一般会是）README.md文件，需执行如下命令

git pull --rebase origin master  ------本地仓库与远端github仓库进行文件合并后，再执行

git push -u origin master 

（2）创建与合并分支

git checkout -b dev ------创建dev分支，并切换到该分支

git branch ------查看分支

git checkout master ------切换到master分支

git merge dev -----将dev分支合并到master分支

git status ------合并后的master,处于未提交状态

git add .

git commit -m '合并了dev的master分支'

git branch -d dev ------删除dev分支

<1>如何解决冲突:

首先创造一个冲突：

在index.html空文件中添加一下内容:

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>
	<p>branch,branch,branch,branch,branch</p>
</body>
</html>

在master分支下执行：

git add .

git commit -m '添加index.html内容'

git push ------提交

git checkout -b dev1 -------创建dev1分支，并切换到该分支

在index.html空文件中添加一下内容:

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>
	<p>branch,branch,branch,branch,branch</p>
	<p>dev1,dev1,dev1,dev1,dev1</p>
</body>
</html>

git add .

git commit -m '在dev1上向index.html添加内容'

然后切换至master分支：

git checkout master

在index.html空文件中添加一下内容:

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>
	<p>branch,branch,branch,branch,branch</p>
	<p>master,master,master,master,master</p>
</body>
</html>

git add .

git commit -m '在master上向index.html添加内容'

然后合并就会有冲突：

git merge dev1







































